#!/usr/bin/perl -w

# $Id: get-files,v 1.6 2002-12-20 16:35:20-08 kst Exp $
# $Source: /home/kst/CVS_smov/tools/gpt-wizard/get-files,v $

use strict;

use File::Basename ();
use Getopt::Long ();

sub Usage(@);
sub Debug(@);
sub Execute(@);

$| = 1;

my $Program_Name    = File::Basename::basename $0;
my $Source_Host     = 'elmak.sdsc.edu';
my $Remote_Base_Dir = '/projects/globus/kst';
my $Local_Base_Dir  = '/home/kst';
my $Force           = undef;
my $Dryrun          = undef;
my $Help            = undef;
my $Debugging       = undef;
my $List_File       = undef;
my @Opts = ( 'source-host=s'     => \$Source_Host,
             'remote-base-dir=s' => \$Remote_Base_Dir,
             'local-base-dir=s'  => \$Local_Base_Dir,
             'force!'            => \$Force,
             'dryrun!'           => \$Dryrun,
             'help!'             => \$Help,
             'debugging!'        => \$Debugging );
Getopt::Long::GetOptions @Opts or Usage;
Usage if $Help;
Usage if scalar @ARGV != 1;
$List_File = $ARGV[0];

open LIST, $List_File or die "$List_File: $!\n";
my @files = <LIST>;
close LIST;
chomp @files;

foreach my $file (@files) {
    if ($file !~ /^\Q$Local_Base_Dir\E/) {
        die "${file} doesn't start with \"${Local_Base_Dir}\"\n";
    }
}

my %dir_exists = ();
#
# For a dry run, we don't actually create the directories;
# $dir_exists{$dir} is true if the directory exists *or* if
# it would have been created.
# Otherwise, $dir_exists{$dir} is true only if the directory
# actually exists.
#

FILE:
foreach my $file (@files) {
    if (-e $file and not $Force) {
        print "$file already exists\n";
        next FILE;
    }

    my $dir = File::Basename::dirname $file;
    if (not $dir_exists{$dir} and -d $dir) {
        $dir_exists{$dir} = 1;
    }
    if (not $dir_exists{$dir}) {
        Execute 'mkdir', '-p', $dir;
        $dir_exists{$dir} = 1 if $Dryrun;
    }
    if (-e $file and $Force) {
        Execute 'rm', '-f', $file;
    }
    my $remote_file = $file;
    $remote_file =~ s/^\Q$Local_Base_Dir\E/$Remote_Base_Dir/;
    Execute 'scp', '-p', "${Source_Host}:$remote_file", $file;
}

########################################################################

sub Usage(@) {
    print @_ if @_;
    print <<"EOF";
Usage: $Program_Name [options] list-file
    -source-host hostname   : Host to copy files from.
                              Default is elmak.sdsc.edu
    -remote-base-dir dir    : Base directory on remote host.
                              Default is /projects/globus/kst
    -local-base-dir dir     : Base directory on local host.
                              Default is /home/kst
    -force                  : Copy files even if they already exist.
    -dryrun                 : Show commands that would be executed.
    -help                   : Display this message and exit.
    -debugging              : Enable debugging output.
EOF
    exit 1;
} # Usage

# ----------------------------------------------------------------------

sub Debug(@) {
    print @_ if $Debugging;
} # Debug

# ----------------------------------------------------------------------

sub Execute(@) {
    my @command = @_;
    print "% @command\n";
    if (not $Dryrun) {
        system @command;
        if ($? != 0) {
            die "$command[0] failed, \$? = $?\n";
        }
    }
} # Execute
